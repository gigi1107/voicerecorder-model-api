version: '3'
services:
  voicerecorder:
    container_name: voicerecorder
    image: voicerecorder:$TAG
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JAR_FILE: $JAR_FILE
    environment:
      CLOUD_AWS_REGION: us-west-1
      AWS_PROFILE: s3
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=*:5005,server=y,suspend=n"
      JAVA_OPTS: >
        -Dspring.profiles.active=dev 
        -Dcloud.aws.region.static=${CLOUD_AWS_REGION} 
        -Dcom.amazonaws.sdk.enableDebug=true 
        -Dcom.amazonaws.sdk.disableCertChecking=true

    ports:
      - 8080:8080
      - 5005:5005
    depends_on:
      - db
      - minio
    volumes:
      - /Users/gdavidson/Documents/IndigenousAI_Project/voicerecorderservice/s3_audio_test.flac:/app/s3_audio_test.flac:ro
    networks:
      - voicerecorder_network

  db:
    container_name: db
    image: postgres:13.5
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    networks:
      - voicerecorder_network
    volumes:
      #      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
  minio:
    container_name: minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - voicerecorder_network
    volumes:
      - minio_storage:/data
    command: server --console-address ":9001" /data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c 
      "/usr/bin/mc alias set myminio http://minio:9000 user password;
      /usr/bin/mc mb myminio/makah-asr;
      /usr/bin/mc policy set public myminio/makah-asr;
      exit 0;"
    networks:
      - voicerecorder_network

networks:
  voicerecorder_network:
    driver: bridge

volumes:
  minio_storage: {}