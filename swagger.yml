openapi: 3.0.1
info:
  title: Phrase Recorder API
  description: This is the API for the Phrase Recorder App.
  termsOfService: http://swagger.io/terms/
  contact:
    email: gdavidson1107@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://indigenous.io/v1
tags:
  - name: phrase
    description: Operations with phrases
  - name: user
    description: Operations with users
  - name: userPhrase
    description: Operations with UserPhrase objects.
  - name: phraseSet
    description: Operations with PhraseSet objects
  - name: userPhraseComments
    description: Operations with UserPhraseComment
paths:
  /phrase:
    put:
      tags:
        - phrase
      summary: Update an existing phrase
      operationId: updatePhrase
      requestBody:
        description: Phrase object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Phrase not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
    post:
      tags:
        - phrase
      summary: Add a new phrase to the Database
      operationId: addPhrase
      requestBody:
        description: Phrase object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
  /phrase/{phraseId}:
    delete:
      tags:
        - phrase
      summary: Delete an existing phrase
      operationId: deletePhrase
      parameters:
        - name: phraseId
          in: path
          description: The phraseId of the phrase you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Phrase not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
    post:
      tags:
        - phrase
      summary: Gets a phrase to the Database
      operationId: getPhraseById
      parameters:
        - name: phraseId
          in: path
          description: The phraseId of the phrase you want to fetch from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "405":
          description: Invalid input
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller


  /user:
    put:
      tags:
        - user
      summary: Edits user with given info
      operationId: updateUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
        - user
      summary: Creates user with given info
      operationId: addUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{userId}:
    delete:
      tags:
        - user
      summary: Delete an existing user
      operationId: delete_user
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: User not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: userId
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
  /user/retrieve:
    post:
      tags:
        - user
        summary: Get user
        operationId: get_user
        requestBody:
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          required: true
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          "400":
            description: Invalid username supplied
            content: {}
          "404":
            description: User not found
            content: {}
        x-codegen-request-body-name: user
        x-openapi-router-controller: swagger_server.controllers.user_controller





### USER PHRASE
  /userPhrase:
    put:
      tags:
        - userPhrase
      summary: Edits a userPhrase in the db
      operationId: updateUserPhrase
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        "200":
          description: Successful Operation
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    post:
      tags:
        - userPhrase
      summary: Saves a userPhrase to db
      operationId: addUserPhrase
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        "200":
          description: Successful Operation
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
  /userPhrase/{userPhraseId}:
    post:
      tags:
        - userPhrase
      summary: Get a userPhrase by ID from the db
      operationId: getUserPhraseById
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhraseID of the userPhrase you want to fetch
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: Successful Operation
        "404":
          description: UserPhrase Id not found.
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    delete:
      tags:
        - userPhrase
      summary: Delete a userPhrase by Id
      operationId: deleteUserPhraseById
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhraseID of the userPhrase you want to delete
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: Successful Operation
        "404":
          description: UserPhrase Id not found.
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller

  /userPhrase/{userPhrase}:
    delete:
      tags:
        - userPhrase
      summary: Delete a userPhrase from the db
      operationId: deleteUserPhrase
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhrase you want to delete
          required: true
          style: simple
          explode: false
          schema:
            type: long
      responses:
        "200":
          description: Successful Operation
        "404":
          description: UserPhrase Id not found.
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller


## Phrase Set

  /phraseSet/{targetPhraseSet}:
    post:
      tags:
        - phrase
        - phraseSet
      summary: Retrieves a given number of phrases from the Database
      description: Number should be greater than 0.
      operationId: getPhrasesFromPhraseSet
      requestBody:
        description: Number of phrases to retrieve from the DB
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phrase'
                x-content-type: application/json
        "400":
          description: Invalid numberPhrases value
          content: {}
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
  /phraseSet:
    put:
      tags:
        - phraseSet
      summary: Update an existing phraseSet
      operationId: updatePhraseSet
      requestBody:
        description: PhraseSet object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraseSet'
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: PhraseSet not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phraseSet
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
      post:
        tags:
          - phraseSet
        summary: Add a new phraseSet to the Database
        operationId: addPhraseSet
        requestBody:
          description: PhraseSet object that needs to be added to the Database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseSet'
          required: true
        responses:
          "405":
            description: Invalid input
            content: {}
        x-codegen-request-body-name: phraseSet
        x-openapi-router-controller: swagger_server.controllers.phrase_controller

components:
  schemas:
    Phrase:
      type: object
      properties:
        id:
          type: long
        phraseSetId:
          type: long
        original:
          type: string
        translation:
          type: string
        exampleRecordingPath:
          type: string
      xml:
        name: Phrase
    User:
      type: object
      properties:
        id:
          type: long
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        project:
          type: string
      xml:
        name: User
    UserPhrase:
      type: object
      properties:
        id:
          type: long
        phraseId:
          type: long
        userId:
          type: long
        dateTime:
          type: timestamp
        filepath:
          type: string
        ## mp4, mp3, ogg vorbis, wav
        ## hex encoded binary string (b64)
        ## add param to tell what kind of file it is, so like (binaryString, wav)
      xml:
        name: UserPhrase
    PhraseSet:
      type: object
      properties:
        id:
          type: long
        phraseSetName:
          type: string
        startDate:
          type: timestamp
        endDate:
          type: timestamp
      xml:
        name: PhraseSet

    UserPhraseComment:
      type: object
      properties:
        id:
          type: long
        phraseId:
          type: long
        comment:
          type: string
        dateTime:
          type: timestamp
        userId:
          type: long
      xml:
        name: UserPhraseComment



