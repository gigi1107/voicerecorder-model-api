openapi: 3.0.1
info:
  title: Phrase Recorder API
  description: This is the API for the Phrase Recorder App.
  termsOfService: http://swagger.io/terms/
  contact:
    email: gdavidson1107@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://indigenous.io/v1
tags:
  - name: phrase
    description: Operations with phrases
  - name: user
    description: Operations with users
  - name: userPhrase
    description: Operations with UserPhrase objects.
paths:
  /phrase:
    put:
      tags:
        - phrase
      summary: Update an existing phrase
      operationId: update_phrase
      requestBody:
        description: Phrase object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Phrase not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
    post:
      tags:
        - phrase
      summary: Add a new phrase to the Database
      operationId: add_phrase
      requestBody:
        description: Phrase object that needs to be added to the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phrase'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
  /phrase/{phraseId}:
    delete:
      tags:
        - phrase
      summary: Delete an existing phrase
      operationId: delete_phrase
      parameters:
        - name: phraseId
          in: path
          description: The phraseId of the phrase you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Phrase not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: phrase
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
  /phrase/phrases:
    post:
      tags:
        - phrase
      summary: Retrieves a given number of phrases from the Database
      description: Number should be greater than 0.
      operationId: get_phrase
      requestBody:
        description: Number of phrases to retrieve from the DB
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Phrase'
                x-content-type: application/json
        "400":
          description: Invalid numberPhrases value
          content: {}
      x-openapi-router-controller: swagger_server.controllers.phrase_controller
  /user:
    put:
      tags:
        - user
      summary: Edits user with given info
      operationId: edit_user
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
        - user
      summary: Creates user with given info
      operationId: create_user
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{userId}:
    delete:
      tags:
        - user
      summary: Delete an existing user
      operationId: delete_user
      parameters:
        - name: userId
          in: path
          description: The userId of the user you want to delete from the Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: User not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: userId
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/retrieve:
    post:
      tags:
        - user
      summary: Get user
      operationId: get_user
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: user
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /userPhrase/s3:
    put:
      tags:
        - userPhrase
      summary: Edits a userPhrase in S3
      operationId: edit_user_phrase_s3
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                description: s3 path to which the userPhrase was saved.
                x-content-type: application/json
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    post:
      tags:
        - userPhrase
      summary: Saves a userPhrase to S3
      operationId: save_user_phrase_s3
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: string
                description: s3 path to which the userPhrase was saved.
                x-content-type: application/json
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
  /userPhrase/s3/{userPhraseId}:
    post:
      tags:
        - userPhrase
      summary: Get a userPhrase by ID from S3
      operationId: get_user_phrase_s3
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhraseID of the userPhrase you want to get from S3
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
        "404":
          description: UserPhrase Id not found in S3.
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    delete:
      tags:
        - userPhrase
      summary: Delete a userPhrase from S3
      operationId: delete_user_phrase_s3
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhraseID of the userPhrase you want to delete from S3
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful Operation
        "404":
          description: UserPhrase Id not found in S3.
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
  /userPhrase/database:
    put:
      tags:
        - userPhrase
      summary: Edit a userPhrase to Database
      operationId: edit_user_phrase_database
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        default:
          description: Successful Operation
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    post:
      tags:
        - userPhrase
      summary: Saves a userPhrase to Database
      operationId: save_user_phrase_database
      requestBody:
        description: UserPhrase object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPhrase'
        required: true
      responses:
        default:
          description: Successful Operation
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
  /userPhrase/database/{userPhraseId}:
    post:
      tags:
        - userPhrase
      summary: Gets a userPhrase by ID from Database
      operationId: get_user_phrase_db
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhrase Id of the userPhrase you want to get from the
            Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Successful Operation
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
    delete:
      tags:
        - userPhrase
      summary: Delete a userPhrase from Database
      operationId: delete_user_phrase_db
      parameters:
        - name: userPhraseId
          in: path
          description: The userPhrase Id of the userPhrase you want to delete from the
            Database
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Successful Operation
          content: {}
      x-codegen-request-body-name: userPhrase
      x-openapi-router-controller: swagger_server.controllers.user_phrase_controller
components:
  schemas:
    Phrase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        original:
          type: string
        translation:
          type: string
        exampleRecording:
          type: string
      example:
        original: original
        exampleRecording: exampleRecording
        translation: translation
        id: 0
      xml:
        name: Phrase
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
      example:
        firstName: firstName
        lastName: lastName
        phone: phone
        id: 0
        email: email
      xml:
        name: User
    Recording:
      type: object
      properties:
        binaryStringRepresentation:
          type: string
        fileType:
          type: string
    UserPhrase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        phrase:
          $ref: '#/components/schemas/Phrase'
        ## mp4, mp3, ogg vorbis, wav
        ## hex encoded binary string (b64)
        ## add param to tell what kind of file it is, so like (binaryString, wav)
        recording:
          $ref: '#/components/schemas/Recording'
        recordingSeries:
          type: integer
          format: int64
        date:
          type: string
        filePath:
          type: string
      xml:
        name: UserPhrase

